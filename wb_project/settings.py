"""
Django settings for wb_project project.

Generated by 'django-admin startproject' using Django 5.2.4.

For more information, see:
https://docs.djangoproject.com/en/5.2/topics/settings/
"""


from pathlib import Path
import os
from platformshconfig import Config
from urllib.parse import urlparse

# Base directory (same as BASE_DIR)
BASE_DIR = Path(__file__).resolve().parent.parent

config = Config()

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get('DJANGO_SECRET_KEY', 'replace-this-with-a-secure-key')

# Local development settings
DEBUG = False
ALLOWED_HOSTS = ['localhost', '127.0.0.1']
CSRF_TRUSTED_ORIGINS = []

if config.is_valid_platform():
    if not config.in_build():
        try:
            domains = [urlparse(url).hostname for url in config.routes().keys()]
            ALLOWED_HOSTS += domains
            CSRF_TRUSTED_ORIGINS = [f"https://{domain}" for domain in domains]
        except Exception:
            pass
    SECRET_KEY = getattr(config, "project_entropy", SECRET_KEY)

# Application definition
INSTALLED_APPS = [
    # Django core
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # Your Apps
    'weird_blog',
    'accounts',

    # Third-Party Apps
    'django_bootstrap5',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'wb_project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / "templates"],  # Customize if needed
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'wb_project.wsgi.application'

# Database: Use SQLite for local development
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': os.environ.get('DB_NAME', 'main'),
        'USER': os.environ.get('DB_USER', 'user'),
        'PASSWORD': os.environ.get('DB_PASSWORD', ''),
        'HOST': os.environ.get('DB_HOST', 'localhost'),
        'PORT': os.environ.get('DB_PORT', '3306'),
    }
}
if config.is_valid_platform() and not config.in_build():
    creds = config.credentials('database')
    DATABASES['default'] = {
        'ENGINE': f"django.db.backends.{creds['scheme']}",
        'NAME': creds['path'],
        'USER': creds['username'],
        'PASSWORD': creds['password'],
        'HOST': creds['host'],
        'PORT': creds['port'],
    }

# Password validation
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_TZ = True

# Static files (CSS, JavaScript, Images)
STATIC_URL = '/static/'
STATIC_ROOT = BASE_DIR / "staticfiles"

# Media files (if you use them)
MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / "media"

# Default auto key field
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Custom settings
LOGIN_REDIRECT_URL = 'weird_blog:index'
LOGOUT_REDIRECT_URL = 'weird_blog:index'
LOGIN_URL = 'accounts:login'

# Remove Platform.sh session file path if not needed
SESSION_ENGINE = 'django.contrib.sessions.backends.file'
SESSION_FILE_PATH = os.path.join(BASE_DIR, 'sessions')
